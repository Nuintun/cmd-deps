/**
 * @module cmd-deps
 * @author nuintun
 * @license MIT
 * @version 3.0.0
 * @description Transform cmd and get cmd dependences
 * @see https://nuintun.github.io/cmd-deps
 */
"use strict";const acorn=require("acorn"),toString=Object.prototype.toString;function string(e){return"[object String]"===toString.call(e)}function fn(e){return"[object Function]"===toString.call(e)}function object(e){return"[object Object]"===toString.call(e)}function encode(e){return e.replace(/['"]/g,"\\$&")}function traverse(e,t){if(!1!==t.call(null,e))for(let r in e)if(e.hasOwnProperty(r)){let n=e[r];null!==n&&"object"==typeof n&&traverse(n,t)}}function visit(e,t,r){let n;try{n=acorn.parse(e,t)}catch(e){}n&&traverse(n,r)}function isRequire(e,t,r){if("CallExpression"===e.type)return e=e.callee,r.length&&"MemberExpression"===e.type?"Identifier"===e.object.type&&e.object.name===t&&("Identifier"===e.property.type&&-1!==r.indexOf(e.property.name)||"Literal"===e.property.type&&-1!==r.indexOf(e.property.value)):"Identifier"===e.type&&e.name===t}function parser(e,t,r){let n=0;const i=[];if(t&&object(t)&&(r=t,t=null),r=r||{},string(e)||(e=""),string(r.word)||(r.word="require"),!new RegExp(`\\b${r.word}\\b`).test(e))return{code:e,dependencies:i};Array.isArray(r.flags)||(r.flags=[]),t&&!fn(t)&&(t=null);const o=(r,o)=>{let l;const c=r.value;i.push({flag:o,path:c}),t&&(l=t(c,o))&&string(l)&&(l=encode(l),e=e.substring(0,r.start+n+1)+l+e.substring(r.end+n-1),n+=l.length-c.length)};return visit(e,r.acorn,e=>{if(isRequire(e,r.word,r.flags)){let t=e.arguments;const r=e.callee.property,n=r?r.name:null;t.length&&("Literal"===(t=t[0]).type?o(t,n):"ArrayExpression"===t.type&&t.elements.forEach(e=>{"Literal"===e.type&&o(e,n)}))}}),{code:e,dependencies:i}}module.exports=parser;